// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId      String   @id @default(uuid())
  firstName   String
  lastName    String
  email       String   @unique
  fieldOfWork String?
  timestamp   DateTime @default(now())

  BossReview    BossReview[]
  CompanyReview CompanyReview[]
}

model Company {
  companyId     String   @id @default(uuid())
  companyName   String
  streetAddress String
  city          String
  state         String
  zipCode       String
  timestamp     DateTime @default(now())

  Boss          Boss[]
  CompanyReview CompanyReview[]
}

model Boss {
  bossId        String   @id @default(uuid())
  bossFirstName String
  bossLastName  String
  position      String
  companyId     String
  timestamp     DateTime @default(now())

  Company    Company      @relation(fields: [companyId], references: [companyId])
  BossReview BossReview[]
}

model BossReview {
  reviewId   String   @id @default(uuid())
  reviewText String
  rating     Int
  term       String
  userId     String?
  bossId     String
  timestamp  DateTime @default(now())

  User User? @relation(fields: [userId], references: [userId])
  Boss Boss? @relation(fields: [bossId], references: [bossId])
}

model CompanyReview {
  reviewId   String   @id @default(uuid())
  reviewText String
  rating     Int
  term       String
  userId     String?
  companyId  String
  timestamp  DateTime @default(now())

  User    User?    @relation(fields: [userId], references: [userId])
  Company Company? @relation(fields: [companyId], references: [companyId])
}
